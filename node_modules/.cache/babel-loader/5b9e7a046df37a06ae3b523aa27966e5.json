{"ast":null,"code":"var _jsxFileName = \"/home/joaohgs/Documents/ProjetosReact/cdc-admin/src/components/Autores.js\";\nimport React, { Component } from \"react\";\nimport $ from 'jquery';\nimport InputCustomizado from './InputCustomizado';\nimport PubSub from 'pubsub-js';\nimport TratadorErros from \"./TratadorErros\";\nimport App from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FormularioAutor extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nome: '',\n      email: '',\n      senha: ''\n    };\n    this.enviaForm = this.enviaForm.bind(this);\n    this.setNome = this.setNome.bind(this);\n    this.setEmail = this.setEmail.bind(this);\n    this.setSenha = this.setSenha.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pure-form pure-form-aligned\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"pure-form pure-form-aligned\",\n        onSubmit: this.enviaForm,\n        methot: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(InputCustomizado, {\n          id: \"nome\",\n          type: \"text\",\n          name: \"nome\",\n          value: this.state.nome,\n          onChange: this.setNome,\n          label: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputCustomizado, {\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          value: this.state.email,\n          onChange: this.setEmail,\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputCustomizado, {\n          id: \"senha\",\n          type: \"password\",\n          name: \"senha\",\n          value: this.state.senha,\n          onChange: this.setSenha,\n          label: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pure-control-group\",\n          children: /*#__PURE__*/_jsxDEV(InputCustomizado, {\n            id: \"submit\",\n            type: \"submit\",\n            name: \"submit\",\n            value: \"Gravar\",\n            className: \"pure-button pure-button-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n  enviaForm(evento) {\n    evento.preventDefault();\n    console.log(\"dados sendo gravados\");\n    $.ajax({\n      url: \"http://cdc-react.herokuapp.com/api/autores\",\n      contentType: 'application/json',\n      dataType: 'json',\n      type: 'post',\n      data: JSON.stringify({\n        nome: this.state.nome,\n        email: this.state.email,\n        senha: this.state.senha\n      }),\n      success: function (resposta) {\n        PubSub.publish('atualiza-lista-autores', resposta);\n        this.setState({\n          nome: '',\n          email: '',\n          senha: ''\n        });\n      }.bind(this),\n      error: function (resposta) {\n        if (resposta.status === 400) {\n          new TratadorErros().publicaErros(resposta.responseJSON);\n        }\n      },\n      beforeSend: function () {\n        PubSub.publish(\"limpa-erros\", {});\n      }\n    });\n  }\n\n  setNome(evento) {\n    this.setState({\n      nome: evento.target.value\n    });\n  }\n\n  setEmail(evento) {\n    this.setState({\n      email: evento.target.value\n    });\n  }\n\n  setSenha(evento) {\n    this.setState({\n      senha: evento.target.value\n    });\n  }\n\n}\n\nclass TabelaAutores extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"pure-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.props.lista.map(function (autor) {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: autor.nome\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: autor.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 33\n                }, this)]\n              }, autor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default class AutorBox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lista: []\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: \"http://cdc-react.herokuapp.com/api/autores\",\n      dataType: 'json',\n      success: function (resposta) {\n        console.log(this);\n        this.setState({\n          lista: resposta\n        });\n      }.bind(this)\n    });\n    PubSub.subscribe('atualiza-lista-autores', function (topico, novaLista) {\n      this.setState({\n        lista: novaLista\n      });\n    }.bind(this));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormularioAutor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TabelaAutores, {\n        lista: this.state.lista\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/joaohgs/Documents/ProjetosReact/cdc-admin/src/components/Autores.js"],"names":["React","Component","$","InputCustomizado","PubSub","TratadorErros","App","FormularioAutor","constructor","state","nome","email","senha","enviaForm","bind","setNome","setEmail","setSenha","render","evento","preventDefault","console","log","ajax","url","contentType","dataType","type","data","JSON","stringify","success","resposta","publish","setState","error","status","publicaErros","responseJSON","beforeSend","target","value","TabelaAutores","props","lista","map","autor","id","AutorBox","componentDidMount","subscribe","topico","novaLista"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport $ from 'jquery';\nimport InputCustomizado from './InputCustomizado';\nimport PubSub from 'pubsub-js';\nimport TratadorErros from \"./TratadorErros\";\nimport App from '../App';\n\n\nclass FormularioAutor extends Component {\n    constructor(){\n        super();\n        this.state = {nome:'',email:'',senha:''};\n        this.enviaForm = this.enviaForm.bind(this);\n        this.setNome = this.setNome.bind(this);\n        this.setEmail = this.setEmail.bind(this);\n        this.setSenha = this.setSenha.bind(this);\n      }\n\n      render(){\n          return(\n            <div className=\"pure-form pure-form-aligned\">\n            \n                <form className=\"pure-form pure-form-aligned\" onSubmit={this.enviaForm} methot=\"post\">\n                <InputCustomizado id=\"nome\" type=\"text\" name=\"nome\" value={this.state.nome} onChange={this.setNome} label=\"Nome\"/>\n                <InputCustomizado id=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.setEmail} label=\"Email\"/>\n                <InputCustomizado id=\"senha\" type=\"password\" name=\"senha\" value={this.state.senha} onChange={this.setSenha} label=\"Senha\"/>\n                <div className=\"pure-control-group\">\n                <InputCustomizado id=\"submit\" type=\"submit\" name=\"submit\" value=\"Gravar\" className=\"pure-button pure-button-primary\"/>\n                </div>\n                </form>\n\n            </div>\n          );\n      }\n\n\n      enviaForm(evento){\n        evento.preventDefault();\n        console.log(\"dados sendo gravados\")\n        $.ajax({\n          url:\"http://cdc-react.herokuapp.com/api/autores\",\n          contentType: 'application/json',\n          dataType:'json',\n          type: 'post',\n          data: JSON.stringify({nome:this.state.nome,email:this.state.email,senha:this.state.senha}),\n          success:function(resposta){\n            PubSub.publish('atualiza-lista-autores', resposta);\n            this.setState({nome:'',email:'',senha:''});\n          }.bind(this),\n          error:function(resposta){\n            if(resposta.status === 400) {\n              new TratadorErros().publicaErros(resposta.responseJSON);\n            }\n          },\n          beforeSend: function(){\n            PubSub.publish(\"limpa-erros\",{});\n          }\n        });\n      }\n      setNome(evento){  \n        this.setState({nome:evento.target.value});\n      }\n    \n      setEmail(evento){\n        this.setState({email:evento.target.value});\n      }\n    \n      setSenha(evento){\n        this.setState({senha:evento.target.value});\n      }\n}\n\nclass TabelaAutores extends Component {\n\n      render() {\n          return(\n            <>\n            <App/>\n            <div>\n            <table className=\"pure-table\">\n              <thead>\n                <tr>\n                  <th>Nome</th>\n                  <th>email</th>\n                </tr>\n              </thead>\n                <tbody>\n                        {\n                        this.props.lista.map(function(autor){\n                            return (\n                            <tr key={autor.id}>\n                                <td>{autor.nome}</td>\n                                <td>{autor.email}</td>\n                            </tr>\n                            );\n                        })\n                        }\n                </tbody>\n            </table> \n          </div>  \n          </>\n          );\n      }\n}\n\nexport default class AutorBox extends Component {\n    constructor(){\n        super();\n        this.state = {lista : []};  \n    }\n\n    componentDidMount(){\n        $.ajax({\n          url:\"http://cdc-react.herokuapp.com/api/autores\",\n          dataType: 'json',\n          success:function(resposta){\n            console.log(this);\n            this.setState({lista:resposta});\n          }.bind(this)\n        });\n\n        PubSub.subscribe('atualiza-lista-autores', function(topico, novaLista){\n          this.setState({lista:novaLista});\n        }.bind(this));\n    }\n\n    render(){\n        return(\n            <>\n            <FormularioAutor/>\n            \n            <TabelaAutores lista={this.state.lista}/>\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}