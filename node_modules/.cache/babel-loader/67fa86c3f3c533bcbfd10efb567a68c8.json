{"ast":null,"code":"var _jsxFileName = \"/home/joaohgs/Documents/ProjetosReact/cdc-admin/src/components/Autores.js\";\nimport React, { Component } from \"react\";\nimport $ from 'jquery';\nimport InputCustomizado from './InputCustomizado';\nimport PubSub from 'pubsub-js';\nimport TratadorErros from \"./TratadorErros\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FormularioLivro extends Component {\n  constructor() {\n    super();\n    this.state = {\n      titulo: '',\n      preco: '',\n      autor: ''\n    };\n    this.enviaForm = this.enviaForm.bind(this);\n    this.setNome = this.setNome.bind(this);\n    this.setEmail = this.setEmail.bind(this);\n    this.setSenha = this.setSenha.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pure-form pure-form-aligned\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"pure-form pure-form-aligned\",\n        onSubmit: this.enviaForm,\n        methot: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(InputCustomizado, {\n          id: \"titulo\",\n          type: \"text\",\n          name: \"titulo\",\n          value: this.state.titulo,\n          onChange: this.setTitulo,\n          label: \"Titulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputCustomizado, {\n          id: \"preco\",\n          type: \"text\",\n          name: \"email\",\n          value: this.state.preco,\n          onChange: this.setPreco,\n          label: \"Pre\\xE7o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputCustomizado, {\n          id: \"autor\",\n          type: \"select\",\n          name: \"autor\",\n          value: this.state.autor,\n          onChange: this.setAutor,\n          label: \"Autor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pure-control-group\",\n          children: /*#__PURE__*/_jsxDEV(InputCustomizado, {\n            id: \"submit\",\n            type: \"submit\",\n            name: \"submit\",\n            value: \"Gravar\",\n            className: \"pure-button pure-button-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  enviaForm(evento) {\n    evento.preventDefault();\n    console.log(\"dados sendo gravados\");\n    $.ajax({\n      url: \"http://cdc-react.herokuapp.com/api/autores\",\n      contentType: 'application/json',\n      dataType: 'json',\n      type: 'post',\n      data: JSON.stringify({\n        nome: this.state.nome,\n        email: this.state.email,\n        senha: this.state.senha\n      }),\n      success: function (resposta) {\n        PubSub.publish('atualiza-lista-autores', resposta);\n        this.setState({\n          nome: '',\n          email: '',\n          senha: ''\n        });\n      }.bind(this),\n      error: function (resposta) {\n        if (resposta.status === 400) {\n          new TratadorErros().publicaErros(resposta.responseJSON);\n        }\n      },\n      beforeSend: function () {\n        PubSub.publish(\"limpa-erros\", {});\n      }\n    });\n  }\n\n  setTitulo(evento) {\n    this.setState({\n      titulo: evento.target.value\n    });\n  }\n\n  setPreco(evento) {\n    this.setState({\n      preco: evento.target.value\n    });\n  }\n\n  setAutor(evento) {\n    this.setState({\n      autor: evento.target.value\n    });\n  }\n\n}\n\nclass TabelaAutores extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"pure-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.props.lista.map(function (autor) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: autor.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: autor.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)]\n            }, autor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class AutorBox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lista: []\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: \"http://cdc-react.herokuapp.com/api/autores\",\n      dataType: 'json',\n      success: function (resposta) {\n        console.log(this);\n        this.setState({\n          lista: resposta\n        });\n      }.bind(this)\n    });\n    PubSub.subscribe('atualiza-lista-autores', function (topico, novaLista) {\n      this.setState({\n        lista: novaLista\n      });\n    }.bind(this));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cadastro de Autores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        id: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(FormularioAutor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabelaAutores, {\n          lista: this.state.lista\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/joaohgs/Documents/ProjetosReact/cdc-admin/src/components/Autores.js"],"names":["React","Component","$","InputCustomizado","PubSub","TratadorErros","FormularioLivro","constructor","state","titulo","preco","autor","enviaForm","bind","setNome","setEmail","setSenha","render","setTitulo","setPreco","setAutor","evento","preventDefault","console","log","ajax","url","contentType","dataType","type","data","JSON","stringify","nome","email","senha","success","resposta","publish","setState","error","status","publicaErros","responseJSON","beforeSend","target","value","TabelaAutores","props","lista","map","id","AutorBox","componentDidMount","subscribe","topico","novaLista"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport $ from 'jquery';\nimport InputCustomizado from './InputCustomizado';\nimport PubSub from 'pubsub-js';\nimport TratadorErros from \"./TratadorErros\";\n\n\nclass FormularioLivro extends Component {\n    constructor(){\n        super();\n        this.state = {titulo:'',preco:'',autor:''};\n        this.enviaForm = this.enviaForm.bind(this);\n        this.setNome = this.setNome.bind(this);\n        this.setEmail = this.setEmail.bind(this);\n        this.setSenha = this.setSenha.bind(this);\n      }\n\n      render(){\n          return(\n            <div className=\"pure-form pure-form-aligned\">\n            \n                <form className=\"pure-form pure-form-aligned\" onSubmit={this.enviaForm} methot=\"post\">\n                <InputCustomizado id=\"titulo\" type=\"text\" name=\"titulo\" value={this.state.titulo} onChange={this.setTitulo} label=\"Titulo\"/>\n                <InputCustomizado id=\"preco\" type=\"text\" name=\"email\" value={this.state.preco} onChange={this.setPreco} label=\"Preço\"/>\n                <InputCustomizado id=\"autor\" type=\"select\" name=\"autor\" value={this.state.autor} onChange={this.setAutor} label=\"Autor\"/>\n                <div className=\"pure-control-group\">\n                <InputCustomizado id=\"submit\" type=\"submit\" name=\"submit\" value=\"Gravar\" className=\"pure-button pure-button-primary\"/>\n                </div>\n                </form>\n\n            </div>\n          );\n      }\n\n\n      enviaForm(evento){\n        evento.preventDefault();\n        console.log(\"dados sendo gravados\")\n        $.ajax({\n          url:\"http://cdc-react.herokuapp.com/api/autores\",\n          contentType: 'application/json',\n          dataType:'json',\n          type: 'post',\n          data: JSON.stringify({nome:this.state.nome,email:this.state.email,senha:this.state.senha}),\n          success:function(resposta){\n            PubSub.publish('atualiza-lista-autores', resposta);\n            this.setState({nome:'',email:'',senha:''});\n          }.bind(this),\n          error:function(resposta){\n            if(resposta.status === 400) {\n              new TratadorErros().publicaErros(resposta.responseJSON);\n            }\n          },\n          beforeSend: function(){\n            PubSub.publish(\"limpa-erros\",{});\n          }\n        });\n      }\n      setTitulo(evento){  \n        this.setState({titulo:evento.target.value});\n      }\n    \n      setPreco(evento){\n        this.setState({preco:evento.target.value});\n      }\n    \n      setAutor(evento){\n        this.setState({autor:evento.target.value});\n      }\n}\n\nclass TabelaAutores extends Component {\n\n      render() {\n          return(\n            <div>\n            <table className=\"pure-table\">\n              <thead>\n                <tr>\n                  <th>Nome</th>\n                  <th>email</th>\n                </tr>\n              </thead>\n                <tbody>\n                        {\n                        this.props.lista.map(function(autor){\n                            return (\n                            <tr key={autor.id}>\n                                <td>{autor.nome}</td>\n                                <td>{autor.email}</td>\n                            </tr>\n                            );\n                        })\n                        }\n                </tbody>\n            </table> \n          </div>  \n          );\n      }\n}\n\nexport default class AutorBox extends Component {\n    constructor(){\n        super();\n        this.state = {lista : []};  \n    }\n\n    componentDidMount(){\n        $.ajax({\n          url:\"http://cdc-react.herokuapp.com/api/autores\",\n          dataType: 'json',\n          success:function(resposta){\n            console.log(this);\n            this.setState({lista:resposta});\n          }.bind(this)\n        });\n\n        PubSub.subscribe('atualiza-lista-autores', function(topico, novaLista){\n          this.setState({lista:novaLista});\n        }.bind(this));\n    }\n\n    render(){\n        return(\n            <>\n            <div className=\"header\">\n                <h1>Cadastro de Autores</h1>\n            </div>\n            <div className=\"content\" id=\"content\">\n            <FormularioAutor/>\n            \n            <TabelaAutores lista={this.state.lista}/>\n            </div>\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}